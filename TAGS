
./dist/build/autogen/Paths_instrument.hs,683
module Paths_instrument (0,1
catchIO ::9,10
catchIO =10,11
version ::13,14
version =14,15
bindir, libdir, datadir, libexecdir :: FilePath15,16
bindir, libdir, datadir, libexecdir :: FilePath15,16
bindir, libdir, datadir, libexecdir15,16
bindir, libdir,15,16
bindir     =17,18
libdir     =18,19
datadir    =19,20
libexecdir =20,21
getBinDir, getLibDir, getDataDir, getLibexecDir :: IO FilePath22,23
getBinDir, getLibDir, getDataDir, getLibexecDir :: IO22,23
getBinDir, getLibDir, getDataDir, getLibexecDir22,23
getBinDir, getLibDir,22,23
getBinDir =23,24
getLibDir =24,25
getDataDir =25,26
getLibexecDir =26,27
getDataFileName ::28,29
getDataFileName name29,30

./Setup.hs,11
main =1,2

./src/Instrument/Client.hs,375
module Instrument.Client5,6
mkSP ::36,37
mkSP hostName37,38
initInstrument ::43,44
initInstrument conn@(_,46,47
submit ::55,56
submit hn56,57
flushSampler ::62,63
flushSampler hostName66,67
time ::80,81
time name81,82
sample ::88,89
sample name89,90
getSampler        ::93,94
getSampler name94,95
getSamplers ::98,99
getSamplers ss99,100
getRef name109,110

./src/Instrument/ClientClass.hs,179
module Instrument.ClientClass4,5
class HasInstrument m22,23
  getInstrument ::23,24
instance (MonadReader25,26
time ::30,31
time name34,35
sample ::40,41
sample name44,45

./src/Instrument/Measurement.hs,129
module Instrument.Measurement11,12
time ::24,25
time act25,26
time_ ::33,34
time_ act34,35
getTime ::40,41
getTime =41,42

./src/Instrument/Sampler.hs,669
module Instrument.Sampler0,1
data Buffer a17,18
data Buffer a = B {17,18
       _size     ::18,19
     , _contents ::19,20
     , _writePos ::20,21
modifyMVar_mask ::27,28
modifyMVar_mask m28,29
modifyMVar_mask_ ::36,37
modifyMVar_mask_ m37,38
withMVar_mask ::45,46
withMVar_mask m46,47
newBuffer ::55,56
newBuffer a56,57
writeBuffer ::65,66
writeBuffer (B66,67
getBuffer ::76,77
getBuffer (B77,78
resetBuffer ::84,85
resetBuffer (B85,86
newtype Sampler =91,92
newtype Sampler = S {91,92
newtype Sampler = S { unS ::91,92
new ::95,96
new i96,97
sample ::100,101
sample v101,102
get ::105,106
get (S106,107
reset ::110,111
reset (S111,112

./src/Instrument/Types.hs,722
module Instrument.Types where2,3
createInstrumentPool (host,21,22
type Samplers =31,32
data Instrument =35,36
data Instrument = I {35,36
      threadId ::36,37
    , hostName ::37,38
    , samplers ::38,39
    , redis ::39,40
    , redisDB ::40,41
data SubmissionPacket =43,44
data SubmissionPacket = SP {43,44
      spTimeStamp ::44,45
    , spHostName ::45,46
    , spName ::46,47
    , spVals ::47,48
data Aggregated =52,53
data Aggregated = Aggregated {52,53
      aggTS ::53,54
    , aggName ::54,55
    , aggStats ::55,56
data Stats =60,61
data Stats = Stats {60,61
      smean ::61,62
    , scount ::62,63
    , smax ::63,64
    , smin ::64,65
    , srange ::65,66
    , sstdev ::66,67

./src/Instrument/Worker.hs,272
module Instrument.Worker0,1
initWorker ::26,27
initWorker conn31,32
mkStats ::38,39
mkStats s39,40
work ::50,51
work r51,52
processSampler ::61,62
processSampler r62,63
putAggregate ::77,78
putAggregate r78,79
popLAll r86,87
popLMany ::95,96
popLMany r96,97
